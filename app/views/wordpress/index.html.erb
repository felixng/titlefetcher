<header class="header">
	<h1>Post Title Fetcher
		<span>Get all public posts title from a wordpress blog.</span>
	</h1>
</header>
<section class="content">
	<%= form_for(@query) do |f| %>  
		<span class="input input--akira">
			<%= f.input :url %>
			<input class="input__field input__field--akira" type="url" id="input-1" required pattern="^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?">
			<label class="input__label input__label--akira" for="input-1">
				<span class="input__label-content input__label-content--akira">Wordpress URL</span>
			</label>
		</span>
		<div class="progress-button">
			<button><span>Submit</span></button>
			<svg class="progress-circle" width="70" height="70"><path d="m35,2.5c17.955803,0 32.5,14.544199 32.5,32.5c0,17.955803 -14.544197,32.5 -32.5,32.5c-17.955803,0 -32.5,-14.544197 -32.5,-32.5c0,-17.955801 14.544197,-32.5 32.5,-32.5z" style="stroke-dasharray: 204.24485778808594px; stroke-dashoffset: 204.24485778808594px;"></path></svg>
			<svg class="checkmark" width="70" height="70"><path d="m31.5,46.5l15.3,-23.2" style="stroke-dasharray: 27.79082679748535px; stroke-dashoffset: 27.79082679748535px;"></path><path d="m31.5,46.5l-8.5,-7.1" style="stroke-dasharray: 11.075196266174316px; stroke-dashoffset: 11.075196266174316px;"></path></svg>
			<svg class="cross" width="70" height="70"><path d="m35,35l-9.3,-9.3" style="stroke-dasharray: 13.15218448638916px; stroke-dashoffset: 13.15218448638916px;"></path><path d="m35,35l9.3,9.3" style="stroke-dasharray: 13.15218448638916px; stroke-dashoffset: 13.15218448638916px;"></path><path d="m35,35l-9.3,9.3" style="stroke-dasharray: 13.15218448638916px; stroke-dashoffset: 13.15218448638916px;"></path><path d="m35,35l9.3,-9.3" style="stroke-dasharray: 13.15218448638916px; stroke-dashoffset: 13.15218448638916px;"></path></svg>
		</div>
		<%= f.submit "Fetch" %> 
	<% end %>

</section>
<script>
	(function() {
		// trim polyfill : https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim
		if (!String.prototype.trim) {
			(function() {
				// Make sure we trim BOM and NBSP
				var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
				String.prototype.trim = function() {
					return this.replace(rtrim, '');
				};
			})();
		}

		[].slice.call( document.querySelectorAll( 'input.input__field' ) ).forEach( function( inputEl ) {
			// in case the input is already filled..
			if( inputEl.value.trim() !== '' ) {
				classie.add( inputEl.parentNode, 'input--filled' );
			}

			// events:
			inputEl.addEventListener( 'focus', onInputFocus );
			inputEl.addEventListener( 'blur', onInputBlur );
		} );

		function onInputFocus( ev ) {
			classie.add( ev.target.parentNode, 'input--filled' );
		}

		function onInputBlur( ev ) {
			if( ev.target.value.trim() === '' ) {
				classie.remove( ev.target.parentNode, 'input--filled' );
			}
		}
	})();


	[].slice.call( document.querySelectorAll( '.progress-button' ) ).forEach( function( bttn, pos ) {
		new UIProgressButton( bttn, {
			callback : function( instance ) {
				var progress = 0,
					interval = setInterval( function() {
						progress = Math.min( progress + Math.random() * 0.1, 1 );
						instance.setProgress( progress );

						if( progress === 1 ) {
							instance.stop( pos === 1 || pos === 3 ? -1 : 1 );
							clearInterval( interval );
						}
					}, 150 );
			}
		} );
	} );
		
</script>
